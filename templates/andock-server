#!/bin/bash

ANDOCK_VERSION=0.3.0
ANDOCK_SSH2DOCKSAL_VERSION={{ssh2docksal_version}}
DOCKSAL_VERSION={{ docksal_version }}

# @author Leonid Makarov
# Console colors
red='\033[0;91m'
red_bg='\033[101m'
green='\033[0;32m'
green_bg='\033[42m'
yellow='\033[1;33m'
NC='\033[0m'
CONFIG_DIR="$HOME/.docksal"

export DOCKSAL_VHOST_PROXY_IP="0.0.0.0"

#------------------------------ Help functions --------------------------------

# Nicely prints command help
# @param $1 command name
# @param $2 description
# @param $3 [optional] command color
# @author Oleksii Chekulaiev
printh ()
{
  local COMMAND_COLUMN_WIDTH=25;
  case "$3" in
  yellow)
    printf "  ${yellow}%-${COMMAND_COLUMN_WIDTH}s${NC}" "$1"
    echo -e "  $2"
  ;;
  green)
    printf "  ${green}%-${COMMAND_COLUMN_WIDTH}s${NC}" "$1"
    echo -e "  $2"
  ;;
  *)
    printf "  %-${COMMAND_COLUMN_WIDTH}s" "$1"
    echo -e "  $2"
  ;;
esac

}

# @author Leonid Makarov
# rewrite previous line
echo-rewrite ()
{
	echo -en "\033[1A"
	echo -e "\033[0K\r""$1"
}
# @author Leonid Makarov
echo-red () { echo -e "${red}$1${NC}"; }
echo-green () { echo -e "${green}$1${NC}"; }
echo-green-bg () { echo -e "${green_bg}$1${NC}"; }
echo-yellow () { echo -e "${yellow}$1${NC}"; }
echo-error () {
	echo -e "${red_bg} ERROR: ${NC} ${red}$1${NC}";
	local unused="$2$3" # avoid IDE warning
	shift
	# Echo other parameters indented. Can be used for error description or suggestions.
	while [[ "$1" != "" ]]; do
		echo -e "         $1";
		shift
	done
}



# Like if_failed but with more strict error
# @author Leonid Makarov
if_failed_error ()
{
  if [ ! $? -eq 0 ]; then
    echo-error "$@"
    exit 1
  fi
}

#------------------------------ HELP --------------------------------
show_help ()
{
  printh "andock Server command reference" "${ANDOCK_VERSION}" "green"

	echo
	printh "ssh-add" "Add public key to andock user authorized_key file"
  echo

	echo
	printh "version (v, -v)" "Print andock version. [v, -v] - prints short version"
	echo
    printh "self-update" "${yellow}Update andock${NC}" "yellow"
}

#------------------------------ SETUP --------------------------------

# Display fin version
# @option --short - Display only the version number
version ()
{
	if [[ $1 == '--short' ]]; then
		echo "$ANDOCK_VERSION"
	else
		echo "andock server (andock-server) version: $ANDOCK_VERSION"
	fi

}

# Initial copy authorized key files from root user to andock user.
copy_authorized_keys ()
{
    if [ -e ~/.ssh/authorized_keys ]; then
        if [ ! -e /home/andock/.ssh/authorized_keys ]; then

            # Copy authorized_keys from root
            cp ~/.ssh/authorized_keys /home/andock/.ssh/authorized_keys

            # Set right permissions.
            chown andock:docker /home/andock/.ssh/authorized_keys

        fi
    fi
}

# Install docksal server
install_docksal ()
{
    # Install docksal.
    curl -fsSL get.docksal.io | DOCKSAL_VERSION=${DOCKSAL_VERSION} bash
    install_ssh2docksal
}

install_ssh2docksal ()
{
    # Install ssh2docksal.
    docker stop andock-ssh2docksal || true && docker rm andock-ssh2docksal || true
    docker run \
    -d \
    -e "HOST_UID=$(id -u)" \
    -e "HOST_GID=$(cut -d: -f3 < <(getent group docker))" \
    --restart=always \
    -v /var/run/docker.sock:/var/run/docker.sock \
    -v /usr/bin/docker:/usr/bin/docker \
    --name andock-ssh2docksal \
    -v ${HOME}/.ssh/authorized_keys:/home/docker/.ssh/authorized_keys \
    -p 0.0.0.0:2222:2222 andockio/ssh2docksal:${ANDOCK_SSH2DOCKSAL_VERSION}

}
}
# Install docksal server
update_docksal ()
{
    DOCKSAL_VERSION=${DOCKSAL_VERSION} fin update
    install_ssh2docksal
}


case "$1" in
  install)
    shift
    install_docksal "$@"
  ;;
  update)
    shift
    update_docksal "$@"
  ;;
  generate-authorized-keys)
    shift
    copy_authorized_keys "$@"
  ;;

  -v | v)
    version --short
  ;;
    version)
	version
  ;;
	*)
		[ ! -f "$command_script" ] && \
			echo-yellow "Unknown command '$*'. See 'andock-server help' for list of available commands" && \
			exit 1
		shift
		exec "$command_script" "$@"
esac